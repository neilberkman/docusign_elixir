# NOTE: This file is auto generated by OpenAPI Generator 6.4.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule DocuSign.Api.SigningGroupUsers do
  @moduledoc """
  API calls for all endpoints tagged `SigningGroupUsers`.
  """

  alias DocuSign.Connection
  import DocuSign.RequestBuilder

  @doc """
  Deletes  one or more members from a signing group.
  Deletes  one or more members from the specified signing group.

  ### Parameters

  - `connection` (DocuSign.Connection): Connection to server
  - `account_id` (String.t): The external account number (int) or account ID GUID.
  - `signing_group_id` (String.t): The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).  **Note:** When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change t he default action of Needs to Sign to a different value, such as Receives a Copy.
  - `opts` (keyword): Optional parameters
    - `:body` (SigningGroupUsers): A complex type that contains information about users in the signing group.

  ### Returns

  - `{:ok, DocuSign.Model.SigningGroupUsers.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec signing_groups_delete_signing_group_users(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, DocuSign.Model.ErrorDetails.t()}
          | {:ok, DocuSign.Model.SigningGroupUsers.t()}
          | {:error, Tesla.Env.t()}
  def signing_groups_delete_signing_group_users(
        connection,
        account_id,
        signing_group_id,
        opts \\ []
      ) do
    optional_params = %{
      :body => :body
    }

    request =
      %{}
      |> method(:delete)
      |> url("/v2.1/accounts/#{account_id}/signing_groups/#{signing_group_id}/users")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %DocuSign.Model.SigningGroupUsers{}},
      {400, %DocuSign.Model.ErrorDetails{}}
    ])
  end

  @doc """
  Gets a list of members in a Signing Group.
  Retrieves the list of members in the specified Signing Group.

  ### Parameters

  - `connection` (DocuSign.Connection): Connection to server
  - `account_id` (String.t): The external account number (int) or account ID GUID.
  - `signing_group_id` (String.t): The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).  **Note:** When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change t he default action of Needs to Sign to a different value, such as Receives a Copy.
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, DocuSign.Model.SigningGroupUsers.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec signing_groups_get_signing_group_users(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, DocuSign.Model.ErrorDetails.t()}
          | {:ok, DocuSign.Model.SigningGroupUsers.t()}
          | {:error, Tesla.Env.t()}
  def signing_groups_get_signing_group_users(
        connection,
        account_id,
        signing_group_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:get)
      |> url("/v2.1/accounts/#{account_id}/signing_groups/#{signing_group_id}/users")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %DocuSign.Model.SigningGroupUsers{}},
      {400, %DocuSign.Model.ErrorDetails{}}
    ])
  end

  @doc """
  Adds members to a signing group.
  Adds one or more new members to a signing group. A signing group can have a maximum of 50 members.

  ### Parameters

  - `connection` (DocuSign.Connection): Connection to server
  - `account_id` (String.t): The external account number (int) or account ID GUID.
  - `signing_group_id` (String.t): The ID of the [signing group](https://support.docusign.com/en/guides/ndse-user-guide-signing-groups).  **Note:** When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature. For this reason, DocuSign recommends that you do not include non-signer recipients (such as carbon copy recipients) in the same signing group as signer recipients. However, you could create a second signing group for the non-signer recipients and change t he default action of Needs to Sign to a different value, such as Receives a Copy.
  - `opts` (keyword): Optional parameters
    - `:body` (SigningGroupUsers): A complex type that contains information about users in the signing group.

  ### Returns

  - `{:ok, DocuSign.Model.SigningGroupUsers.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec signing_groups_put_signing_group_users(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, DocuSign.Model.ErrorDetails.t()}
          | {:ok, DocuSign.Model.SigningGroupUsers.t()}
          | {:error, Tesla.Env.t()}
  def signing_groups_put_signing_group_users(connection, account_id, signing_group_id, opts \\ []) do
    optional_params = %{
      :body => :body
    }

    request =
      %{}
      |> method(:put)
      |> url("/v2.1/accounts/#{account_id}/signing_groups/#{signing_group_id}/users")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %DocuSign.Model.SigningGroupUsers{}},
      {400, %DocuSign.Model.ErrorDetails{}}
    ])
  end
end
