# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule DocuSign.Api.FavoriteTemplates do
  @moduledoc """
  API calls for all endpoints tagged `FavoriteTemplates`.
  """

  alias DocuSign.Connection
  import DocuSign.RequestBuilder


  @doc """
  Retrieves the list of favorited templates for this caller.

  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID GUID.
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, DocuSign.Model.FavoriteTemplatesInfo.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec favorite_templates_get_favorite_templates(Tesla.Env.client, String.t, keyword()) :: {:ok, DocuSign.Model.FavoriteTemplatesInfo.t} | {:ok, DocuSign.Model.ErrorDetails.t} | {:error, Tesla.Env.t}
  def favorite_templates_get_favorite_templates(connection, account_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/v2.1/accounts/#{account_id}/favorite_templates")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %DocuSign.Model.FavoriteTemplatesInfo{}},
      { 400, %DocuSign.Model.ErrorDetails{}}
    ])
  end

  @doc """
  Sets a template as a favorite. 

  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID GUID.
  - opts (KeywordList): [optional] Optional parameters
    - :body (FavoriteTemplatesInfo): 
  ## Returns

  {:ok, DocuSign.Model.FavoriteTemplatesInfo.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec favorite_templates_put_favorite_template(Tesla.Env.client, String.t, keyword()) :: {:ok, DocuSign.Model.FavoriteTemplatesInfo.t} | {:ok, DocuSign.Model.ErrorDetails.t} | {:error, Tesla.Env.t}
  def favorite_templates_put_favorite_template(connection, account_id, opts \\ []) do
    optional_params = %{
      :body => :body
    }
    %{}
    |> method(:put)
    |> url("/v2.1/accounts/#{account_id}/favorite_templates")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %DocuSign.Model.FavoriteTemplatesInfo{}},
      { 400, %DocuSign.Model.ErrorDetails{}}
    ])
  end

  @doc """
  Unfavorites a template.

  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID GUID.
  - opts (KeywordList): [optional] Optional parameters
    - :body (FavoriteTemplatesInfo): 
  ## Returns

  {:ok, DocuSign.Model.FavoriteTemplatesInfo.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec favorite_templates_un_favorite_template(Tesla.Env.client, String.t, keyword()) :: {:ok, DocuSign.Model.FavoriteTemplatesInfo.t} | {:ok, DocuSign.Model.ErrorDetails.t} | {:error, Tesla.Env.t}
  def favorite_templates_un_favorite_template(connection, account_id, opts \\ []) do
    optional_params = %{
      :body => :body
    }
    %{}
    |> method(:delete)
    |> url("/v2.1/accounts/#{account_id}/favorite_templates")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %DocuSign.Model.FavoriteTemplatesInfo{}},
      { 400, %DocuSign.Model.ErrorDetails{}}
    ])
  end
end
