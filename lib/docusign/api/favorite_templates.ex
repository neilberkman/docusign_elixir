# NOTE: This file is auto generated by OpenAPI Generator 6.4.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule DocuSign.Api.FavoriteTemplates do
  @moduledoc """
  API calls for all endpoints tagged `FavoriteTemplates`.
  """

  alias DocuSign.Connection
  import DocuSign.RequestBuilder

  @doc """
  Retrieves the list of favorite templates for the account.
  Retrieves the list of favorite templates for the account.

  ### Parameters

  - `connection` (DocuSign.Connection): Connection to server
  - `account_id` (String.t): The external account number (int) or account ID GUID.
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, DocuSign.Model.FavoriteTemplatesInfo.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec favorite_templates_get_favorite_templates(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, DocuSign.Model.FavoriteTemplatesInfo.t()}
          | {:ok, DocuSign.Model.ErrorDetails.t()}
          | {:error, Tesla.Env.t()}
  def favorite_templates_get_favorite_templates(connection, account_id, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/v2.1/accounts/#{account_id}/favorite_templates")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %DocuSign.Model.FavoriteTemplatesInfo{}},
      {400, %DocuSign.Model.ErrorDetails{}}
    ])
  end

  @doc """
  Set one or more templates as account favorites.
  Set one or more templates as account favorites.  Your request should include each template as a separate `favoriteTemplatesContentItem` JSON object, like this: ``` {     \"favoriteTemplates\": [         {             \"templateId\": \"6bc0584f-xxxx-xxxx-xxxx-35ab28cc44e1\"         },         {             \"templateId\": \"8ae9b3452-xxxx-xxxx-xxx-ac0de23fa57f\"         }     ] } ```

  ### Parameters

  - `connection` (DocuSign.Connection): Connection to server
  - `account_id` (String.t): The external account number (int) or account ID GUID.
  - `opts` (keyword): Optional parameters
    - `:body` (FavoriteTemplatesInfo):

  ### Returns

  - `{:ok, DocuSign.Model.FavoriteTemplatesInfo.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec favorite_templates_put_favorite_template(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, DocuSign.Model.FavoriteTemplatesInfo.t()}
          | {:ok, DocuSign.Model.ErrorDetails.t()}
          | {:error, Tesla.Env.t()}
  def favorite_templates_put_favorite_template(connection, account_id, opts \\ []) do
    optional_params = %{
      :body => :body
    }

    request =
      %{}
      |> method(:put)
      |> url("/v2.1/accounts/#{account_id}/favorite_templates")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %DocuSign.Model.FavoriteTemplatesInfo{}},
      {400, %DocuSign.Model.ErrorDetails{}}
    ])
  end

  @doc """
  Remove one or more templates from the account favorites.
  Remove one or more templates from the account favorites.   Your request should include each template to remove as a separate `favoriteTemplatesContentItem` JSON object, like this: ``` {     \"favoriteTemplates\": [         {             \"templateId\": \"6bc0584f-xxxx-xxxx-xxxx-35ab28cc44e1\"         },         {             \"templateId\": \"8ae9b3452-xxxx-xxxx-xxx-ac0de23fa57f\"         }     ] } ```  The response includes the IDs of the templates that were successfully removed from your favorites. To get the account's remaining favorite templates, use the [getFavoriteTemplates](/docs/esign-rest-api/reference/accounts/favoritetemplates/getfavoritetemplates/) endpoint.

  ### Parameters

  - `connection` (DocuSign.Connection): Connection to server
  - `account_id` (String.t): The external account number (int) or account ID GUID.
  - `opts` (keyword): Optional parameters
    - `:body` (FavoriteTemplatesInfo):

  ### Returns

  - `{:ok, DocuSign.Model.FavoriteTemplatesInfo.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec favorite_templates_un_favorite_template(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, DocuSign.Model.FavoriteTemplatesInfo.t()}
          | {:ok, DocuSign.Model.ErrorDetails.t()}
          | {:error, Tesla.Env.t()}
  def favorite_templates_un_favorite_template(connection, account_id, opts \\ []) do
    optional_params = %{
      :body => :body
    }

    request =
      %{}
      |> method(:delete)
      |> url("/v2.1/accounts/#{account_id}/favorite_templates")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %DocuSign.Model.FavoriteTemplatesInfo{}},
      {400, %DocuSign.Model.ErrorDetails{}}
    ])
  end
end
