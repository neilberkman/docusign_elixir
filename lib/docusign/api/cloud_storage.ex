# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule DocuSign.Api.CloudStorage do
  @moduledoc """
  API calls for all endpoints tagged `CloudStorage`.
  """

  alias DocuSign.Connection
  import DocuSign.RequestBuilder

  @doc """
  Gets a list of all the items from the specified cloud storage provider.
  Retrieves a list of all the items in all  the folders associated with the user from the specified cloud storage provider. You can limit the scope of the returned items by providing a comma separated list of folder IDs in the request.

  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID Guid.
  - folder_id (String.t): The ID of the folder being accessed.
  - service_id (String.t): The ID of the service to access.   Valid values are the service name (\&quot;Box\&quot;) or the numerical serviceId (\&quot;4136\&quot;).
  - user_id (String.t): The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
  - opts (KeywordList): [optional] Optional parameters
    - :cloud_storage_folder_path (String.t): 
    - :count (String.t): An optional value that sets how many items are included in the response.   The default setting for this is 25. 
    - :order (String.t): An optional value that sets the direction order used to sort the item list.   Valid values are:   * asc &#x3D; ascending sort order * desc &#x3D; descending sort order 
    - :order_by (String.t): An optional value that sets the file attribute used to sort the item list.   Valid values are:   * modified * name  
    - :search_text (String.t): 
    - :start_position (String.t): Indicates the starting point of the first item included in the response set. It uses a 0-based index. The default setting for this is 0.  

  ## Returns

  {:ok, %DocuSign.Model.CloudStorage{}} on success
  {:error, info} on failure
  """
  @spec cloud_storage_folder_get_cloud_storage_folder(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, DocuSign.Model.CloudStorage.t()} | {:error, Tesla.Env.t()}
  def cloud_storage_folder_get_cloud_storage_folder(
        connection,
        account_id,
        folder_id,
        service_id,
        user_id,
        opts \\ []
      ) do
    optional_params = %{
      cloud_storage_folder_path: :query,
      count: :query,
      order: :query,
      order_by: :query,
      search_text: :query,
      start_position: :query
    }

    %{}
    |> method(:get)
    |> url(
      "/v2/accounts/#{account_id}/users/#{user_id}/cloud_storage/#{service_id}/folders/#{
        folder_id
      }"
    )
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DocuSign.Model.CloudStorage{})
  end

  @doc """
  Retrieves a list of all the items in a specified folder from the specified cloud storage provider.
  Retrieves a list of all the items in a specified folder from the specified cloud storage provider. 

  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID Guid.
  - service_id (String.t): The ID of the service to access.   Valid values are the service name (\&quot;Box\&quot;) or the numerical serviceId (\&quot;4136\&quot;).
  - user_id (String.t): The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.
  - opts (KeywordList): [optional] Optional parameters
    - :cloud_storage_folder_path (String.t): A comma separated list of folder IDs included in the request. 
    - :count (String.t): An optional value that sets how many items are included in the response.   The default setting for this is 25. 
    - :order (String.t): An optional value that sets the direction order used to sort the item list.   Valid values are:   * asc &#x3D; ascending sort order * desc &#x3D; descending sort order 
    - :order_by (String.t): An optional value that sets the file attribute used to sort the item list.   Valid values are:   * modified * name  
    - :search_text (String.t): 
    - :start_position (String.t): Indicates the starting point of the first item included in the response set. It uses a 0-based index. The default setting for this is 0.  

  ## Returns

  {:ok, %DocuSign.Model.CloudStorage{}} on success
  {:error, info} on failure
  """
  @spec cloud_storage_folder_get_cloud_storage_folder_all(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, DocuSign.Model.CloudStorage.t()} | {:error, Tesla.Env.t()}
  def cloud_storage_folder_get_cloud_storage_folder_all(
        connection,
        account_id,
        service_id,
        user_id,
        opts \\ []
      ) do
    optional_params = %{
      cloud_storage_folder_path: :query,
      count: :query,
      order: :query,
      order_by: :query,
      search_text: :query,
      start_position: :query
    }

    %{}
    |> method(:get)
    |> url("/v2/accounts/#{account_id}/users/#{user_id}/cloud_storage/#{service_id}/folders")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DocuSign.Model.CloudStorage{})
  end
end
