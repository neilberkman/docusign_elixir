# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule DocuSign.Api.BulkEnvelopes do
  @moduledoc """
  API calls for all endpoints tagged `BulkEnvelopes`.
  """

  alias DocuSign.Connection
  import DocuSign.RequestBuilder

  @doc """
  Gets the status of a specified bulk send operation.
  Retrieves the status information of a single bulk recipient batch. A bulk recipient batch is the set of envelopes sent from a single bulk recipient file. 

  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID Guid.
  - batch_id (String.t): 
  - opts (KeywordList): [optional] Optional parameters
    - :count (String.t): Specifies the number of entries to return.
    - :include (String.t): Specifies which entries are included in the response. Multiple entries can be included by using commas in the query string (example: ?include&#x3D;\&quot;failed,queued\&quot;)   Valid values:  * all - Returns all entries. If present, overrides all other query settings. This is the default if no query string is provided. * failed - Entries with a failed status. * processing - Entries with a processing status. * queued - Entries with a queued status. * sent - Entries with a sent status.  
    - :start_position (String.t): Specifies the location in the list of envelopes from which to start.

  ## Returns

  {:ok, %DocuSign.Model.BulkEnvelopeStatus{}} on success
  {:error, info} on failure
  """
  @spec bulk_envelopes_get_bulk_envelopes_batch_id(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, DocuSign.Model.BulkEnvelopeStatus.t()} | {:error, Tesla.Env.t()}
  def bulk_envelopes_get_bulk_envelopes_batch_id(connection, account_id, batch_id, opts \\ []) do
    optional_params = %{
      count: :query,
      include: :query,
      start_position: :query
    }

    %{}
    |> method(:get)
    |> url("/v2/accounts/#{account_id}/bulk_envelopes/#{batch_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DocuSign.Model.BulkEnvelopeStatus{})
  end

  @doc """
  Gets status information about bulk recipient batches.
  Retrieves status information about all the bulk recipient batches. A bulk recipient batch is the set of envelopes sent from a single bulk recipient file. The response includes general information about each bulk recipient batch.   The response returns information about the envelopes sent with bulk recipient batches, including the &#x60;batchId&#x60; property, which can be used to retrieve a more detailed status of individual bulk recipient batches.

  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID Guid.
  - opts (KeywordList): [optional] Optional parameters
    - :count (String.t): The number of results to return. This can be 1 to 20.
    - :include (String.t): Specifies which entries are included in the response. Multiple entries can be included by using commas in the query string (example: ?include&#x3D;\&quot;failed,queued\&quot;)   Valid values:  * all - Returns all entries. If present, overrides all other query settings. This is the default if no query string is provided. * failed - Entries with a failed status. * processing - Entries with a processing status. * queued - Entries with a queued status. * sent - Entries with a sent status.  
    - :start_position (String.t): The position of the bulk envelope items in the response. This is used for repeated calls, when the number of bulk envelopes returned is too large for one return. The default value is 0.

  ## Returns

  {:ok, %DocuSign.Model.BulkEnvelopes{}} on success
  {:error, info} on failure
  """
  @spec bulk_envelopes_get_envelopes_bulk(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, DocuSign.Model.BulkEnvelopes.t()} | {:error, Tesla.Env.t()}
  def bulk_envelopes_get_envelopes_bulk(connection, account_id, opts \\ []) do
    optional_params = %{
      count: :query,
      include: :query,
      start_position: :query
    }

    %{}
    |> method(:get)
    |> url("/v2/accounts/#{account_id}/bulk_envelopes")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DocuSign.Model.BulkEnvelopes{})
  end
end
