# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.LinkedExternalPrimaryAccount do
  @moduledoc """

  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.ExternalPrimaryAccountRecipientAuthRequirements

  defstruct [
    :accountName,
    :configurationId,
    :email,
    :exemptMembersOfSameAccountFromAuth,
    :linkId,
    :pdfFieldHandlingOption,
    :pdfFieldHandlingPrefillTabPermission,
    :pdfFieldHandlingStandardInputTabPermission,
    :pdfFieldHandlingStandardTabPermission,
    :recipientAuthRequirements,
    :status,
    :userId
  ]

  @doc false
  defimpl Jason.Encoder, for: __MODULE__ do
    def encode(struct, opts) do
      struct
      |> Map.from_struct()
      |> Enum.reject(fn {_k, v} -> is_nil(v) end)
      |> Map.new()
      |> Jason.Encode.map(opts)
    end
  end

  @type t :: %__MODULE__{
          :accountName => String.t() | nil,
          :configurationId => String.t() | nil,
          :email => String.t() | nil,
          :exemptMembersOfSameAccountFromAuth => String.t() | nil,
          :linkId => String.t() | nil,
          :pdfFieldHandlingOption => String.t() | nil,
          :pdfFieldHandlingPrefillTabPermission => String.t() | nil,
          :pdfFieldHandlingStandardInputTabPermission => String.t() | nil,
          :pdfFieldHandlingStandardTabPermission => String.t() | nil,
          :recipientAuthRequirements => ExternalPrimaryAccountRecipientAuthRequirements.t() | nil,
          :status => String.t() | nil,
          :userId => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :recipientAuthRequirements,
      :struct,
      ExternalPrimaryAccountRecipientAuthRequirements
    )
    |> then(&struct(__MODULE__, &1))
  end
end
