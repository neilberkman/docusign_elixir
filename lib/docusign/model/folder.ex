# NOTE: This file is auto generated by OpenAPI Generator 6.4.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule DocuSign.Model.Folder do
  @moduledoc """
  This object contains details about a folder.
  """

  @derive [Poison.Encoder]
  defstruct [
    :errorDetails,
    :filter,
    :folderId,
    :folderItems,
    :folders,
    :hasAccess,
    :hasSubFolders,
    :itemCount,
    :name,
    :owner,
    :parentFolderId,
    :parentFolderUri,
    :subFolderCount,
    :type,
    :uri
  ]

  @type t :: %__MODULE__{
          :errorDetails => DocuSign.Model.ErrorDetails.t() | nil,
          :filter => DocuSign.Model.Filter.t() | nil,
          :folderId => String.t() | nil,
          :folderItems => [DocuSign.Model.FolderItemV2.t()] | nil,
          :folders => [DocuSign.Model.Folder.t()] | nil,
          :hasAccess => String.t() | nil,
          :hasSubFolders => String.t() | nil,
          :itemCount => String.t() | nil,
          :name => String.t() | nil,
          :owner => DocuSign.Model.UserInfo.t() | nil,
          :parentFolderId => String.t() | nil,
          :parentFolderUri => String.t() | nil,
          :subFolderCount => String.t() | nil,
          :type => String.t() | nil,
          :uri => String.t() | nil
        }
end

defimpl Poison.Decoder, for: DocuSign.Model.Folder do
  import DocuSign.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:errorDetails, :struct, DocuSign.Model.ErrorDetails, options)
    |> deserialize(:filter, :struct, DocuSign.Model.Filter, options)
    |> deserialize(:folderItems, :list, DocuSign.Model.FolderItemV2, options)
    |> deserialize(:folders, :list, DocuSign.Model.Folder, options)
    |> deserialize(:owner, :struct, DocuSign.Model.UserInfo, options)
  end
end
