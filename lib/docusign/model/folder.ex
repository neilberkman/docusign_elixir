# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.Folder do
  @moduledoc """
  This object contains details about a folder.
  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.ErrorDetails
  alias DocuSign.Model.Filter
  alias DocuSign.Model.Folder
  alias DocuSign.Model.FolderItemV2
  alias DocuSign.Model.UserInfo

  defstruct [
    :errorDetails,
    :filter,
    :folderId,
    :folderItems,
    :folders,
    :hasAccess,
    :hasSubFolders,
    :itemCount,
    :name,
    :owner,
    :parentFolderId,
    :parentFolderUri,
    :subFolderCount,
    :type,
    :uri
  ]

  @doc false
  defimpl Jason.Encoder, for: __MODULE__ do
    def encode(struct, opts) do
      struct
      |> Map.from_struct()
      |> Enum.reject(fn {_k, v} -> is_nil(v) end)
      |> Map.new()
      |> Jason.Encode.map(opts)
    end
  end

  @type t :: %__MODULE__{
          :errorDetails => ErrorDetails.t() | nil,
          :filter => Filter.t() | nil,
          :folderId => String.t() | nil,
          :folderItems => [FolderItemV2.t()] | nil,
          :folders => [Folder.t()] | nil,
          :hasAccess => String.t() | nil,
          :hasSubFolders => String.t() | nil,
          :itemCount => String.t() | nil,
          :name => String.t() | nil,
          :owner => UserInfo.t() | nil,
          :parentFolderId => String.t() | nil,
          :parentFolderUri => String.t() | nil,
          :subFolderCount => String.t() | nil,
          :type => String.t() | nil,
          :uri => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :errorDetails,
      :struct,
      ErrorDetails
    )
    |> Deserializer.deserialize(
      :filter,
      :struct,
      Filter
    )
    |> Deserializer.deserialize(
      :folderItems,
      :list,
      FolderItemV2
    )
    |> Deserializer.deserialize(
      :folders,
      :list,
      Folder
    )
    |> Deserializer.deserialize(
      :owner,
      :struct,
      UserInfo
    )
    |> then(&struct(__MODULE__, &1))
  end
end
