# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.TemplateViewSettings do
  @moduledoc """

  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.EnvelopeViewDocumentSettings
  alias DocuSign.Model.EnvelopeViewEnvelopeCustomFieldSettings
  alias DocuSign.Model.EnvelopeViewTaggerSettings
  alias DocuSign.Model.TemplateViewRecipientSettings

  defstruct [
    :backButtonAction,
    :documentSettings,
    :envelopeCustomFieldSettings,
    :lockToken,
    :recipientSettings,
    :showAdvancedOptions,
    :showBackButton,
    :showDiscardAction,
    :showHeaderActions,
    :startingScreen,
    :taggerSettings
  ]

  @doc false
  defimpl Jason.Encoder, for: __MODULE__ do
    def encode(struct, opts) do
      struct
      |> Map.from_struct()
      |> Enum.reject(fn {_k, v} -> is_nil(v) end)
      |> Map.new()
      |> Jason.Encode.map(opts)
    end
  end

  @type t :: %__MODULE__{
          :backButtonAction => String.t() | nil,
          :documentSettings => EnvelopeViewDocumentSettings.t() | nil,
          :envelopeCustomFieldSettings => EnvelopeViewEnvelopeCustomFieldSettings.t() | nil,
          :lockToken => String.t() | nil,
          :recipientSettings => TemplateViewRecipientSettings.t() | nil,
          :showAdvancedOptions => String.t() | nil,
          :showBackButton => String.t() | nil,
          :showDiscardAction => String.t() | nil,
          :showHeaderActions => String.t() | nil,
          :startingScreen => String.t() | nil,
          :taggerSettings => EnvelopeViewTaggerSettings.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :documentSettings,
      :struct,
      EnvelopeViewDocumentSettings
    )
    |> Deserializer.deserialize(
      :envelopeCustomFieldSettings,
      :struct,
      EnvelopeViewEnvelopeCustomFieldSettings
    )
    |> Deserializer.deserialize(
      :recipientSettings,
      :struct,
      TemplateViewRecipientSettings
    )
    |> Deserializer.deserialize(
      :taggerSettings,
      :struct,
      EnvelopeViewTaggerSettings
    )
    |> then(&struct(__MODULE__, &1))
  end
end
