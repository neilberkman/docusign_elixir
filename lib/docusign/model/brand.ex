# NOTE: This file is auto generated by OpenAPI Generator 7.12.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule DocuSign.Model.Brand do
  @moduledoc """
  Information about a brand that is associated with an account. A brand applies custom styles and text to an envelope.
  """

  @derive Jason.Encoder
  defstruct [
    :brandCompany,
    :brandId,
    :brandLanguages,
    :brandName,
    :colors,
    :defaultBrandLanguage,
    :emailContent,
    :errorDetails,
    :isOrganizationBrand,
    :isOverridingCompanyName,
    :isSendingDefault,
    :isSigningDefault,
    :landingPages,
    :links,
    :logos,
    :organizationBrandLogo,
    :resources
  ]

  @type t :: %__MODULE__{
          :brandCompany => String.t() | nil,
          :brandId => String.t() | nil,
          :brandLanguages => [String.t()] | nil,
          :brandName => String.t() | nil,
          :colors => [DocuSign.Model.NameValue.t()] | nil,
          :defaultBrandLanguage => String.t() | nil,
          :emailContent => [DocuSign.Model.BrandEmailContent.t()] | nil,
          :errorDetails => DocuSign.Model.ErrorDetails.t() | nil,
          :isOrganizationBrand => String.t() | nil,
          :isOverridingCompanyName => boolean() | nil,
          :isSendingDefault => boolean() | nil,
          :isSigningDefault => boolean() | nil,
          :landingPages => [DocuSign.Model.NameValue.t()] | nil,
          :links => [DocuSign.Model.BrandLink.t()] | nil,
          :logos => DocuSign.Model.BrandLogos.t() | nil,
          :organizationBrandLogo => String.t() | nil,
          :resources => DocuSign.Model.BrandResourceUrls.t() | nil
        }

  alias DocuSign.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:colors, :list, DocuSign.Model.NameValue)
    |> Deserializer.deserialize(:emailContent, :list, DocuSign.Model.BrandEmailContent)
    |> Deserializer.deserialize(:errorDetails, :struct, DocuSign.Model.ErrorDetails)
    |> Deserializer.deserialize(:landingPages, :list, DocuSign.Model.NameValue)
    |> Deserializer.deserialize(:links, :list, DocuSign.Model.BrandLink)
    |> Deserializer.deserialize(:logos, :struct, DocuSign.Model.BrandLogos)
    |> Deserializer.deserialize(:resources, :struct, DocuSign.Model.BrandResourceUrls)
  end
end
