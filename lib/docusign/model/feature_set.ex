# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.FeatureSet do
  @moduledoc """
  This object provides details about a feature set, or add-on product that is associated with an account. It is reserved for Docusign internal use only.
  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.CurrencyFeatureSetPrice

  defstruct [
    :currencyFeatureSetPrices,
    :envelopeFee,
    :featureSetId,
    :fixedFee,
    :is21CFRPart11,
    :isActive,
    :isEnabled,
    :name,
    :seatFee
  ]

  @doc false
  defimpl Jason.Encoder, for: __MODULE__ do
    def encode(struct, opts) do
      struct
      |> Map.from_struct()
      |> Enum.reject(fn {_k, v} -> is_nil(v) end)
      |> Map.new()
      |> Jason.Encode.map(opts)
    end
  end

  @type t :: %__MODULE__{
          :currencyFeatureSetPrices => [CurrencyFeatureSetPrice.t()] | nil,
          :envelopeFee => String.t() | nil,
          :featureSetId => String.t() | nil,
          :fixedFee => String.t() | nil,
          :is21CFRPart11 => String.t() | nil,
          :isActive => String.t() | nil,
          :isEnabled => String.t() | nil,
          :name => String.t() | nil,
          :seatFee => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :currencyFeatureSetPrices,
      :list,
      CurrencyFeatureSetPrice
    )
    |> then(&struct(__MODULE__, &1))
  end
end
