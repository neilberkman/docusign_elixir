# NOTE: This file is auto generated by OpenAPI Generator 7.12.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule DocuSign.Model.EnvelopesInformation do
  @moduledoc """
  Result set for the Envelopes: listStatusChanges method
  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.Envelope
  alias DocuSign.Model.EnvelopeTransactionStatus
  alias DocuSign.Model.Folder

  @derive Jason.Encoder
  defstruct [
    :continuationToken,
    :endPosition,
    :envelopeSearchSource,
    :envelopeTransactionStatuses,
    :envelopes,
    :folders,
    :lastQueriedDateTime,
    :nextUri,
    :previousUri,
    :resultSetSize,
    :startPosition,
    :totalSetSize
  ]

  @type t :: %__MODULE__{
          :continuationToken => String.t() | nil,
          :endPosition => String.t() | nil,
          :envelopeSearchSource => String.t() | nil,
          :envelopeTransactionStatuses => [EnvelopeTransactionStatus.t()] | nil,
          :envelopes => [Envelope.t()] | nil,
          :folders => [Folder.t()] | nil,
          :lastQueriedDateTime => String.t() | nil,
          :nextUri => String.t() | nil,
          :previousUri => String.t() | nil,
          :resultSetSize => String.t() | nil,
          :startPosition => String.t() | nil,
          :totalSetSize => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(:envelopes, :list, Envelope)
    |> Deserializer.deserialize(
      :envelopeTransactionStatuses,
      :list,
      EnvelopeTransactionStatus
    )
    |> Deserializer.deserialize(:folders, :list, Folder)
  end
end
