# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.BillingCharge do
  @moduledoc """
  Contains information about a billing charge.
  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.BillingDiscount
  alias DocuSign.Model.BillingPrice

  @derive Jason.Encoder
  defstruct [
    :allowedQuantity,
    :blocked,
    :chargeName,
    :chargeType,
    :chargeUnitOfMeasure,
    :discounts,
    :firstEffectiveDate,
    :includedQuantity,
    :incrementalQuantity,
    :lastEffectiveDate,
    :prices,
    :unitPrice,
    :usedQuantity
  ]

  @type t :: %__MODULE__{
          :allowedQuantity => String.t() | nil,
          :blocked => String.t() | nil,
          :chargeName => String.t() | nil,
          :chargeType => String.t() | nil,
          :chargeUnitOfMeasure => String.t() | nil,
          :discounts => [BillingDiscount.t()] | nil,
          :firstEffectiveDate => String.t() | nil,
          :includedQuantity => String.t() | nil,
          :incrementalQuantity => String.t() | nil,
          :lastEffectiveDate => String.t() | nil,
          :prices => [BillingPrice.t()] | nil,
          :unitPrice => String.t() | nil,
          :usedQuantity => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :discounts,
      :list,
      BillingDiscount
    )
    |> Deserializer.deserialize(
      :prices,
      :list,
      BillingPrice
    )
  end
end
