# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.TemplateSharedItem do
  @moduledoc """
  Information about shared templates.
  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.ErrorDetails
  alias DocuSign.Model.MemberGroupSharedItem
  alias DocuSign.Model.UserInfo
  alias DocuSign.Model.UserSharedItem

  defstruct [
    :errorDetails,
    :owner,
    :password,
    :shared,
    :sharedGroups,
    :sharedUsers,
    :templateId,
    :templateName
  ]

  @doc false
  defimpl Jason.Encoder, for: __MODULE__ do
    def encode(struct, opts) do
      struct
      |> Map.from_struct()
      |> Enum.reject(fn {_k, v} -> is_nil(v) end)
      |> Map.new()
      |> Jason.Encode.map(opts)
    end
  end

  @type t :: %__MODULE__{
          :errorDetails => ErrorDetails.t() | nil,
          :owner => UserInfo.t() | nil,
          :password => String.t() | nil,
          :shared => String.t() | nil,
          :sharedGroups => [MemberGroupSharedItem.t()] | nil,
          :sharedUsers => [UserSharedItem.t()] | nil,
          :templateId => String.t() | nil,
          :templateName => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :errorDetails,
      :struct,
      ErrorDetails
    )
    |> Deserializer.deserialize(
      :owner,
      :struct,
      UserInfo
    )
    |> Deserializer.deserialize(
      :sharedGroups,
      :list,
      MemberGroupSharedItem
    )
    |> Deserializer.deserialize(
      :sharedUsers,
      :list,
      UserSharedItem
    )
    |> then(&struct(__MODULE__, &1))
  end
end
