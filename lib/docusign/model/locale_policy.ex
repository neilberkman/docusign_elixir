# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.LocalePolicy do
  @moduledoc """

  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.SettingsMetadata

  @derive Jason.Encoder
  defstruct [
    :addressFormat,
    :addressFormatMetadata,
    :allowRegion,
    :calendarType,
    :calendarTypeMetadata,
    :cultureName,
    :cultureNameMetadata,
    :currencyCode,
    :currencyCodeMetadata,
    :currencyNegativeFormat,
    :currencyNegativeFormatMetadata,
    :currencyPositiveFormat,
    :currencyPositiveFormatMetadata,
    :customDateFormat,
    :customSignDateFormat,
    :customSignTimeFormat,
    :customTimeFormat,
    :dateFormat,
    :dateFormatMetadata,
    :effectiveAddressFormat,
    :effectiveCalendarType,
    :effectiveCurrencyCode,
    :effectiveCurrencyNegativeFormat,
    :effectiveCurrencyPositiveFormat,
    :effectiveCustomDateFormat,
    :effectiveCustomTimeFormat,
    :effectiveDateFormat,
    :effectiveInitialFormat,
    :effectiveNameFormat,
    :effectiveTimeFormat,
    :effectiveTimeZone,
    :initialFormat,
    :initialFormatMetadata,
    :nameFormat,
    :nameFormatMetadata,
    :signDateFormat,
    :signDateFormatMetadata,
    :signTimeFormat,
    :signTimeFormatMetadata,
    :timeFormat,
    :timeFormatMetadata,
    :timeZone,
    :timeZoneMetadata
  ]

  @type t :: %__MODULE__{
          :addressFormat => String.t() | nil,
          :addressFormatMetadata => SettingsMetadata.t() | nil,
          :allowRegion => String.t() | nil,
          :calendarType => String.t() | nil,
          :calendarTypeMetadata => SettingsMetadata.t() | nil,
          :cultureName => String.t() | nil,
          :cultureNameMetadata => SettingsMetadata.t() | nil,
          :currencyCode => String.t() | nil,
          :currencyCodeMetadata => SettingsMetadata.t() | nil,
          :currencyNegativeFormat => String.t() | nil,
          :currencyNegativeFormatMetadata => SettingsMetadata.t() | nil,
          :currencyPositiveFormat => String.t() | nil,
          :currencyPositiveFormatMetadata => SettingsMetadata.t() | nil,
          :customDateFormat => String.t() | nil,
          :customSignDateFormat => String.t() | nil,
          :customSignTimeFormat => String.t() | nil,
          :customTimeFormat => String.t() | nil,
          :dateFormat => String.t() | nil,
          :dateFormatMetadata => SettingsMetadata.t() | nil,
          :effectiveAddressFormat => String.t() | nil,
          :effectiveCalendarType => String.t() | nil,
          :effectiveCurrencyCode => String.t() | nil,
          :effectiveCurrencyNegativeFormat => String.t() | nil,
          :effectiveCurrencyPositiveFormat => String.t() | nil,
          :effectiveCustomDateFormat => String.t() | nil,
          :effectiveCustomTimeFormat => String.t() | nil,
          :effectiveDateFormat => String.t() | nil,
          :effectiveInitialFormat => String.t() | nil,
          :effectiveNameFormat => String.t() | nil,
          :effectiveTimeFormat => String.t() | nil,
          :effectiveTimeZone => String.t() | nil,
          :initialFormat => String.t() | nil,
          :initialFormatMetadata => SettingsMetadata.t() | nil,
          :nameFormat => String.t() | nil,
          :nameFormatMetadata => SettingsMetadata.t() | nil,
          :signDateFormat => String.t() | nil,
          :signDateFormatMetadata => SettingsMetadata.t() | nil,
          :signTimeFormat => String.t() | nil,
          :signTimeFormatMetadata => SettingsMetadata.t() | nil,
          :timeFormat => String.t() | nil,
          :timeFormatMetadata => SettingsMetadata.t() | nil,
          :timeZone => String.t() | nil,
          :timeZoneMetadata => SettingsMetadata.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :addressFormatMetadata,
      :struct,
      SettingsMetadata
    )
    |> Deserializer.deserialize(
      :calendarTypeMetadata,
      :struct,
      SettingsMetadata
    )
    |> Deserializer.deserialize(
      :cultureNameMetadata,
      :struct,
      SettingsMetadata
    )
    |> Deserializer.deserialize(
      :currencyCodeMetadata,
      :struct,
      SettingsMetadata
    )
    |> Deserializer.deserialize(
      :currencyNegativeFormatMetadata,
      :struct,
      SettingsMetadata
    )
    |> Deserializer.deserialize(
      :currencyPositiveFormatMetadata,
      :struct,
      SettingsMetadata
    )
    |> Deserializer.deserialize(
      :dateFormatMetadata,
      :struct,
      SettingsMetadata
    )
    |> Deserializer.deserialize(
      :initialFormatMetadata,
      :struct,
      SettingsMetadata
    )
    |> Deserializer.deserialize(
      :nameFormatMetadata,
      :struct,
      SettingsMetadata
    )
    |> Deserializer.deserialize(
      :signDateFormatMetadata,
      :struct,
      SettingsMetadata
    )
    |> Deserializer.deserialize(
      :signTimeFormatMetadata,
      :struct,
      SettingsMetadata
    )
    |> Deserializer.deserialize(
      :timeFormatMetadata,
      :struct,
      SettingsMetadata
    )
    |> Deserializer.deserialize(
      :timeZoneMetadata,
      :struct,
      SettingsMetadata
    )
  end
end
