# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.Stamp do
  @moduledoc """

  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.DateStampProperties
  alias DocuSign.Model.ErrorDetails

  defstruct [
    :adoptedDateTime,
    :createdDateTime,
    :customField,
    :dateStampProperties,
    :disallowUserResizeStamp,
    :errorDetails,
    :externalID,
    :imageBase64,
    :imageType,
    :lastModifiedDateTime,
    :phoneticName,
    :signatureName,
    :stampFormat,
    :stampImageUri,
    :stampSizeMM,
    :status
  ]

  @doc false
  defimpl Jason.Encoder, for: __MODULE__ do
    def encode(struct, opts) do
      struct
      |> Map.from_struct()
      |> Enum.reject(fn {_k, v} -> is_nil(v) end)
      |> Map.new()
      |> Jason.Encode.map(opts)
    end
  end

  @type t :: %__MODULE__{
          :adoptedDateTime => String.t() | nil,
          :createdDateTime => String.t() | nil,
          :customField => String.t() | nil,
          :dateStampProperties => DateStampProperties.t() | nil,
          :disallowUserResizeStamp => String.t() | nil,
          :errorDetails => ErrorDetails.t() | nil,
          :externalID => String.t() | nil,
          :imageBase64 => String.t() | nil,
          :imageType => String.t() | nil,
          :lastModifiedDateTime => String.t() | nil,
          :phoneticName => String.t() | nil,
          :signatureName => String.t() | nil,
          :stampFormat => String.t() | nil,
          :stampImageUri => String.t() | nil,
          :stampSizeMM => String.t() | nil,
          :status => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :dateStampProperties,
      :struct,
      DateStampProperties
    )
    |> Deserializer.deserialize(
      :errorDetails,
      :struct,
      ErrorDetails
    )
    |> then(&struct(__MODULE__, &1))
  end
end
