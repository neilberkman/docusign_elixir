# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.BulkEnvelope do
  @moduledoc """

  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.ErrorDetails

  defstruct [
    :bulkRecipientRow,
    :bulkStatus,
    :email,
    :envelopeId,
    :envelopeUri,
    :errorDetails,
    :name,
    :submittedDateTime,
    :transactionId
  ]

  @doc false
  defimpl Jason.Encoder, for: __MODULE__ do
    def encode(struct, opts) do
      struct
      |> Map.from_struct()
      |> Enum.reject(fn {_k, v} -> is_nil(v) end)
      |> Map.new()
      |> Jason.Encode.map(opts)
    end
  end

  @type t :: %__MODULE__{
          :bulkRecipientRow => String.t() | nil,
          :bulkStatus => String.t() | nil,
          :email => String.t() | nil,
          :envelopeId => String.t() | nil,
          :envelopeUri => String.t() | nil,
          :errorDetails => ErrorDetails.t() | nil,
          :name => String.t() | nil,
          :submittedDateTime => String.t() | nil,
          :transactionId => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :errorDetails,
      :struct,
      ErrorDetails
    )
    |> then(&struct(__MODULE__, &1))
  end
end
