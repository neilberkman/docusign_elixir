# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.AccountSignatureDefinition do
  @moduledoc """

  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.DateStampProperties
  alias DocuSign.Model.SignatureGroupDef
  alias DocuSign.Model.SignatureUserDef

  defstruct [
    :dateStampProperties,
    :disallowUserResizeStamp,
    :externalID,
    :imageType,
    :isDefault,
    :nrdsId,
    :nrdsLastName,
    :phoneticName,
    :signatureFont,
    :signatureGroups,
    :signatureId,
    :signatureInitials,
    :signatureName,
    :signatureType,
    :signatureUsers,
    :stampFormat,
    :stampSizeMM
  ]

  @doc false
  defimpl Jason.Encoder, for: __MODULE__ do
    def encode(struct, opts) do
      struct
      |> Map.from_struct()
      |> Enum.reject(fn {_k, v} -> is_nil(v) end)
      |> Map.new()
      |> Jason.Encode.map(opts)
    end
  end

  @type t :: %__MODULE__{
          :dateStampProperties => DateStampProperties.t() | nil,
          :disallowUserResizeStamp => String.t() | nil,
          :externalID => String.t() | nil,
          :imageType => String.t() | nil,
          :isDefault => String.t() | nil,
          :nrdsId => String.t() | nil,
          :nrdsLastName => String.t() | nil,
          :phoneticName => String.t() | nil,
          :signatureFont => String.t() | nil,
          :signatureGroups => [SignatureGroupDef.t()] | nil,
          :signatureId => String.t() | nil,
          :signatureInitials => String.t() | nil,
          :signatureName => String.t() | nil,
          :signatureType => String.t() | nil,
          :signatureUsers => [SignatureUserDef.t()] | nil,
          :stampFormat => String.t() | nil,
          :stampSizeMM => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :dateStampProperties,
      :struct,
      DateStampProperties
    )
    |> Deserializer.deserialize(
      :signatureGroups,
      :list,
      SignatureGroupDef
    )
    |> Deserializer.deserialize(
      :signatureUsers,
      :list,
      SignatureUserDef
    )
    |> then(&struct(__MODULE__, &1))
  end
end
