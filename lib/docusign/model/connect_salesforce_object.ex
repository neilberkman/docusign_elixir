# NOTE: This file is auto generated by OpenAPI Generator 6.4.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule DocuSign.Model.ConnectSalesforceObject do
  @moduledoc """
  A `connectSalesforceObject` is an object that updates envelope and document status or recipient status in your Salesforce account.  When you install DocuSign Connect for Salesforce, the service automatically sets up two Connect objects: one that updates envelope status and documents and one that updates recipient status. You can also customize DocuSign Connect for Salesforce by associating DocuSign objects with Salesforce objects so that DocuSign Connect for Salesforce updates or inserts the information into the Salesforce object. For more information, see  [DocuSign for Salesforce - Adding Completed Documents to the Notes and Attachments](https://support.docusign.com/articles/DocuSign-for-Salesforce-Adding-Completed-Documents-to-the-Notes-and-Attachments-New).
  """

  @derive [Poison.Encoder]
  defstruct [
    :active,
    :description,
    :id,
    :insert,
    :onCompleteOnly,
    :selectFields,
    :sfObject,
    :sfObjectName,
    :updateFields
  ]

  @type t :: %__MODULE__{
          :active => String.t() | nil,
          :description => String.t() | nil,
          :id => String.t() | nil,
          :insert => String.t() | nil,
          :onCompleteOnly => String.t() | nil,
          :selectFields => [DocuSign.Model.ConnectSalesforceField.t()] | nil,
          :sfObject => String.t() | nil,
          :sfObjectName => String.t() | nil,
          :updateFields => [DocuSign.Model.ConnectSalesforceField.t()] | nil
        }
end

defimpl Poison.Decoder, for: DocuSign.Model.ConnectSalesforceObject do
  import DocuSign.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:selectFields, :list, DocuSign.Model.ConnectSalesforceField, options)
    |> deserialize(:updateFields, :list, DocuSign.Model.ConnectSalesforceField, options)
  end
end
