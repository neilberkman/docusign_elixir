# NOTE: This file is auto generated by OpenAPI Generator 7.12.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule DocuSign.Model.RadioGroup do
  @moduledoc """
  This group tab is used to place radio buttons on a document. The `radios` property contains a list of [`radio`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/) objects  associated with the group. Only one radio button can be selected in a group. 
  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.PropertyMetadata
  alias DocuSign.Model.Radio

  @derive Jason.Encoder
  defstruct [
    :conditionalParentLabel,
    :conditionalParentLabelMetadata,
    :conditionalParentValue,
    :conditionalParentValueMetadata,
    :documentId,
    :documentIdMetadata,
    :groupName,
    :groupNameMetadata,
    :originalValue,
    :originalValueMetadata,
    :radios,
    :recipientId,
    :recipientIdGuid,
    :recipientIdGuidMetadata,
    :recipientIdMetadata,
    :requireAll,
    :requireAllMetadata,
    :requireInitialOnSharedChange,
    :requireInitialOnSharedChangeMetadata,
    :shareToRecipients,
    :shareToRecipientsMetadata,
    :shared,
    :sharedMetadata,
    :tabType,
    :tabTypeMetadata,
    :templateLocked,
    :templateLockedMetadata,
    :templateRequired,
    :templateRequiredMetadata,
    :tooltip,
    :tooltipMetadata,
    :value,
    :valueMetadata
  ]

  @type t :: %__MODULE__{
          :conditionalParentLabel => String.t() | nil,
          :conditionalParentLabelMetadata => PropertyMetadata.t() | nil,
          :conditionalParentValue => String.t() | nil,
          :conditionalParentValueMetadata => PropertyMetadata.t() | nil,
          :documentId => String.t() | nil,
          :documentIdMetadata => PropertyMetadata.t() | nil,
          :groupName => String.t() | nil,
          :groupNameMetadata => PropertyMetadata.t() | nil,
          :originalValue => String.t() | nil,
          :originalValueMetadata => PropertyMetadata.t() | nil,
          :radios => [Radio.t()] | nil,
          :recipientId => String.t() | nil,
          :recipientIdGuid => String.t() | nil,
          :recipientIdGuidMetadata => PropertyMetadata.t() | nil,
          :recipientIdMetadata => PropertyMetadata.t() | nil,
          :requireAll => String.t() | nil,
          :requireAllMetadata => PropertyMetadata.t() | nil,
          :requireInitialOnSharedChange => String.t() | nil,
          :requireInitialOnSharedChangeMetadata => PropertyMetadata.t() | nil,
          :shareToRecipients => String.t() | nil,
          :shareToRecipientsMetadata => PropertyMetadata.t() | nil,
          :shared => String.t() | nil,
          :sharedMetadata => PropertyMetadata.t() | nil,
          :tabType => String.t() | nil,
          :tabTypeMetadata => PropertyMetadata.t() | nil,
          :templateLocked => String.t() | nil,
          :templateLockedMetadata => PropertyMetadata.t() | nil,
          :templateRequired => String.t() | nil,
          :templateRequiredMetadata => PropertyMetadata.t() | nil,
          :tooltip => String.t() | nil,
          :tooltipMetadata => PropertyMetadata.t() | nil,
          :value => String.t() | nil,
          :valueMetadata => PropertyMetadata.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :conditionalParentLabelMetadata,
      :struct,
      PropertyMetadata
    )
    |> Deserializer.deserialize(
      :conditionalParentValueMetadata,
      :struct,
      PropertyMetadata
    )
    |> Deserializer.deserialize(:documentIdMetadata, :struct, PropertyMetadata)
    |> Deserializer.deserialize(:groupNameMetadata, :struct, PropertyMetadata)
    |> Deserializer.deserialize(:originalValueMetadata, :struct, PropertyMetadata)
    |> Deserializer.deserialize(:radios, :list, Radio)
    |> Deserializer.deserialize(
      :recipientIdGuidMetadata,
      :struct,
      PropertyMetadata
    )
    |> Deserializer.deserialize(:recipientIdMetadata, :struct, PropertyMetadata)
    |> Deserializer.deserialize(:requireAllMetadata, :struct, PropertyMetadata)
    |> Deserializer.deserialize(
      :requireInitialOnSharedChangeMetadata,
      :struct,
      PropertyMetadata
    )
    |> Deserializer.deserialize(:sharedMetadata, :struct, PropertyMetadata)
    |> Deserializer.deserialize(
      :shareToRecipientsMetadata,
      :struct,
      PropertyMetadata
    )
    |> Deserializer.deserialize(:tabTypeMetadata, :struct, PropertyMetadata)
    |> Deserializer.deserialize(:templateLockedMetadata, :struct, PropertyMetadata)
    |> Deserializer.deserialize(
      :templateRequiredMetadata,
      :struct,
      PropertyMetadata
    )
    |> Deserializer.deserialize(:tooltipMetadata, :struct, PropertyMetadata)
    |> Deserializer.deserialize(:valueMetadata, :struct, PropertyMetadata)
  end
end
