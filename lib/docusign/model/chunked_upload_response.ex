# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.ChunkedUploadResponse do
  @moduledoc """
  This response object is returned after you upload a chunked upload.
  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.ChunkedUploadPart

  defstruct [
    :checksum,
    :chunkedUploadId,
    :chunkedUploadParts,
    :chunkedUploadUri,
    :committed,
    :expirationDateTime,
    :maxChunkedUploadParts,
    :maxTotalSize,
    :totalSize
  ]

  @doc false
  defimpl Jason.Encoder, for: __MODULE__ do
    def encode(struct, opts) do
      struct
      |> Map.from_struct()
      |> Enum.reject(fn {_k, v} -> is_nil(v) end)
      |> Map.new()
      |> Jason.Encode.map(opts)
    end
  end

  @type t :: %__MODULE__{
          :checksum => String.t() | nil,
          :chunkedUploadId => String.t() | nil,
          :chunkedUploadParts => [ChunkedUploadPart.t()] | nil,
          :chunkedUploadUri => String.t() | nil,
          :committed => String.t() | nil,
          :expirationDateTime => String.t() | nil,
          :maxChunkedUploadParts => String.t() | nil,
          :maxTotalSize => String.t() | nil,
          :totalSize => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :chunkedUploadParts,
      :list,
      ChunkedUploadPart
    )
    |> then(&struct(__MODULE__, &1))
  end
end
