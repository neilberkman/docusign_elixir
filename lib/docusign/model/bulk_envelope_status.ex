# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.BulkEnvelopeStatus do
  @moduledoc """

  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.BulkEnvelope

  defstruct [
    :batchId,
    :batchSize,
    :bulkEnvelopes,
    :bulkEnvelopesBatchUri,
    :endPosition,
    :failed,
    :nextUri,
    :previousUri,
    :queued,
    :resultSetSize,
    :sent,
    :startPosition,
    :submittedDate,
    :totalSetSize
  ]

  @doc false
  defimpl Jason.Encoder, for: __MODULE__ do
    def encode(struct, opts) do
      struct
      |> Map.from_struct()
      |> Enum.reject(fn {_k, v} -> is_nil(v) end)
      |> Map.new()
      |> Jason.Encode.map(opts)
    end
  end

  @type t :: %__MODULE__{
          :batchId => String.t() | nil,
          :batchSize => String.t() | nil,
          :bulkEnvelopes => [BulkEnvelope.t()] | nil,
          :bulkEnvelopesBatchUri => String.t() | nil,
          :endPosition => String.t() | nil,
          :failed => String.t() | nil,
          :nextUri => String.t() | nil,
          :previousUri => String.t() | nil,
          :queued => String.t() | nil,
          :resultSetSize => String.t() | nil,
          :sent => String.t() | nil,
          :startPosition => String.t() | nil,
          :submittedDate => String.t() | nil,
          :totalSetSize => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :bulkEnvelopes,
      :list,
      BulkEnvelope
    )
    |> then(&struct(__MODULE__, &1))
  end
end
