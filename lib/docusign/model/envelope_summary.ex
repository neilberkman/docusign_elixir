# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.EnvelopeSummary do
  @moduledoc """
   This object describes an envelope.
  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.BulkEnvelopeStatus
  alias DocuSign.Model.ErrorDetails

  defstruct [
    :bulkEnvelopeStatus,
    :envelopeId,
    :errorDetails,
    :recipientSigningUri,
    :recipientSigningUriError,
    :status,
    :statusDateTime,
    :uri
  ]

  @doc false
  defimpl Jason.Encoder, for: __MODULE__ do
    def encode(struct, opts) do
      struct
      |> Map.from_struct()
      |> Enum.reject(fn {_k, v} -> is_nil(v) end)
      |> Map.new()
      |> Jason.Encode.map(opts)
    end
  end

  @type t :: %__MODULE__{
          :bulkEnvelopeStatus => BulkEnvelopeStatus.t() | nil,
          :envelopeId => String.t() | nil,
          :errorDetails => ErrorDetails.t() | nil,
          :recipientSigningUri => String.t() | nil,
          :recipientSigningUriError => String.t() | nil,
          :status => String.t() | nil,
          :statusDateTime => String.t() | nil,
          :uri => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :bulkEnvelopeStatus,
      :struct,
      BulkEnvelopeStatus
    )
    |> Deserializer.deserialize(
      :errorDetails,
      :struct,
      ErrorDetails
    )
    |> then(&struct(__MODULE__, &1))
  end
end
