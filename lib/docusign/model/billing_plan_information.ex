# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.BillingPlanInformation do
  @moduledoc """
  This object contains details about a billing plan.
  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.AccountAddress
  alias DocuSign.Model.AppStoreReceipt
  alias DocuSign.Model.CreditCardInformation
  alias DocuSign.Model.DirectDebitProcessorInformation
  alias DocuSign.Model.PaymentProcessorInformation
  alias DocuSign.Model.PlanInformation
  alias DocuSign.Model.ReferralInformation

  defstruct [
    :appStoreReceipt,
    :billingAddress,
    :creditCardInformation,
    :directDebitProcessorInformation,
    :downgradeReason,
    :enablePreAuth,
    :enableSupport,
    :includedSeats,
    :incrementalSeats,
    :paymentMethod,
    :paymentProcessor,
    :paymentProcessorInformation,
    :planInformation,
    :processPayment,
    :referralInformation,
    :renewalStatus,
    :saleDiscountAmount,
    :saleDiscountFixedAmount,
    :saleDiscountPercent,
    :saleDiscountPeriods,
    :saleDiscountSeatPriceOverride,
    :taxExemptId
  ]

  @doc false
  defimpl Jason.Encoder, for: __MODULE__ do
    def encode(struct, opts) do
      struct
      |> Map.from_struct()
      |> Enum.reject(fn {_k, v} -> is_nil(v) end)
      |> Map.new()
      |> Jason.Encode.map(opts)
    end
  end

  @type t :: %__MODULE__{
          :appStoreReceipt => AppStoreReceipt.t() | nil,
          :billingAddress => AccountAddress.t() | nil,
          :creditCardInformation => CreditCardInformation.t() | nil,
          :directDebitProcessorInformation => DirectDebitProcessorInformation.t() | nil,
          :downgradeReason => String.t() | nil,
          :enablePreAuth => String.t() | nil,
          :enableSupport => String.t() | nil,
          :includedSeats => String.t() | nil,
          :incrementalSeats => String.t() | nil,
          :paymentMethod => String.t() | nil,
          :paymentProcessor => String.t() | nil,
          :paymentProcessorInformation => PaymentProcessorInformation.t() | nil,
          :planInformation => PlanInformation.t() | nil,
          :processPayment => String.t() | nil,
          :referralInformation => ReferralInformation.t() | nil,
          :renewalStatus => String.t() | nil,
          :saleDiscountAmount => String.t() | nil,
          :saleDiscountFixedAmount => String.t() | nil,
          :saleDiscountPercent => String.t() | nil,
          :saleDiscountPeriods => String.t() | nil,
          :saleDiscountSeatPriceOverride => String.t() | nil,
          :taxExemptId => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :appStoreReceipt,
      :struct,
      AppStoreReceipt
    )
    |> Deserializer.deserialize(
      :billingAddress,
      :struct,
      AccountAddress
    )
    |> Deserializer.deserialize(
      :creditCardInformation,
      :struct,
      CreditCardInformation
    )
    |> Deserializer.deserialize(
      :directDebitProcessorInformation,
      :struct,
      DirectDebitProcessorInformation
    )
    |> Deserializer.deserialize(
      :paymentProcessorInformation,
      :struct,
      PaymentProcessorInformation
    )
    |> Deserializer.deserialize(
      :planInformation,
      :struct,
      PlanInformation
    )
    |> Deserializer.deserialize(
      :referralInformation,
      :struct,
      ReferralInformation
    )
    |> then(&struct(__MODULE__, &1))
  end
end
