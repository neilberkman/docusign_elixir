# NOTE: This file is auto generated by OpenAPI Generator 6.4.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule DocuSign.Model.BillingPlanInformation do
  @moduledoc """
  This object contains details about a billing plan.
  """

  @derive [Poison.Encoder]
  defstruct [
    :appStoreReceipt,
    :billingAddress,
    :creditCardInformation,
    :directDebitProcessorInformation,
    :downgradeReason,
    :enablePreAuth,
    :enableSupport,
    :includedSeats,
    :incrementalSeats,
    :paymentMethod,
    :paymentProcessor,
    :paymentProcessorInformation,
    :planInformation,
    :processPayment,
    :referralInformation,
    :renewalStatus,
    :saleDiscountAmount,
    :saleDiscountFixedAmount,
    :saleDiscountPercent,
    :saleDiscountPeriods,
    :saleDiscountSeatPriceOverride,
    :taxExemptId
  ]

  @type t :: %__MODULE__{
          :appStoreReceipt => DocuSign.Model.AppStoreReceipt.t() | nil,
          :billingAddress => DocuSign.Model.AccountAddress.t() | nil,
          :creditCardInformation => DocuSign.Model.CreditCardInformation.t() | nil,
          :directDebitProcessorInformation =>
            DocuSign.Model.DirectDebitProcessorInformation.t() | nil,
          :downgradeReason => String.t() | nil,
          :enablePreAuth => String.t() | nil,
          :enableSupport => String.t() | nil,
          :includedSeats => String.t() | nil,
          :incrementalSeats => String.t() | nil,
          :paymentMethod => String.t() | nil,
          :paymentProcessor => String.t() | nil,
          :paymentProcessorInformation => DocuSign.Model.PaymentProcessorInformation.t() | nil,
          :planInformation => DocuSign.Model.PlanInformation.t() | nil,
          :processPayment => String.t() | nil,
          :referralInformation => DocuSign.Model.ReferralInformation.t() | nil,
          :renewalStatus => String.t() | nil,
          :saleDiscountAmount => String.t() | nil,
          :saleDiscountFixedAmount => String.t() | nil,
          :saleDiscountPercent => String.t() | nil,
          :saleDiscountPeriods => String.t() | nil,
          :saleDiscountSeatPriceOverride => String.t() | nil,
          :taxExemptId => String.t() | nil
        }
end

defimpl Poison.Decoder, for: DocuSign.Model.BillingPlanInformation do
  import DocuSign.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:appStoreReceipt, :struct, DocuSign.Model.AppStoreReceipt, options)
    |> deserialize(:billingAddress, :struct, DocuSign.Model.AccountAddress, options)
    |> deserialize(:creditCardInformation, :struct, DocuSign.Model.CreditCardInformation, options)
    |> deserialize(
      :directDebitProcessorInformation,
      :struct,
      DocuSign.Model.DirectDebitProcessorInformation,
      options
    )
    |> deserialize(
      :paymentProcessorInformation,
      :struct,
      DocuSign.Model.PaymentProcessorInformation,
      options
    )
    |> deserialize(:planInformation, :struct, DocuSign.Model.PlanInformation, options)
    |> deserialize(:referralInformation, :struct, DocuSign.Model.ReferralInformation, options)
  end
end
