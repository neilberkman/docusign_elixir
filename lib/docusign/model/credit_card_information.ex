# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.CreditCardInformation do
  @moduledoc """
  This object contains information about a credit card that is associated with an account.
  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.AddressInformation

  defstruct [
    :address,
    :cardLastDigits,
    :cardNumber,
    :cardType,
    :cvNumber,
    :expirationMonth,
    :expirationYear,
    :nameOnCard,
    :tokenizedCard
  ]

  @doc false
  defimpl Jason.Encoder, for: __MODULE__ do
    def encode(struct, opts) do
      struct
      |> Map.from_struct()
      |> Enum.reject(fn {_k, v} -> is_nil(v) end)
      |> Map.new()
      |> Jason.Encode.map(opts)
    end
  end

  @type t :: %__MODULE__{
          :address => AddressInformation.t() | nil,
          :cardLastDigits => String.t() | nil,
          :cardNumber => String.t() | nil,
          :cardType => String.t() | nil,
          :cvNumber => String.t() | nil,
          :expirationMonth => String.t() | nil,
          :expirationYear => String.t() | nil,
          :nameOnCard => String.t() | nil,
          :tokenizedCard => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :address,
      :struct,
      AddressInformation
    )
    |> then(&struct(__MODULE__, &1))
  end
end
