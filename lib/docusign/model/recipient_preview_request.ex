# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.RecipientPreviewRequest do
  @moduledoc """
  This request object contains the information necessary to create a recipient preview.
  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.RecipientTokenClientUrls

  defstruct [
    :assertionId,
    :authenticationInstant,
    :authenticationMethod,
    :clientURLs,
    :pingFrequency,
    :pingUrl,
    :recipientId,
    :returnUrl,
    :securityDomain,
    :xFrameOptions,
    :xFrameOptionsAllowFromUrl
  ]

  @doc false
  defimpl Jason.Encoder, for: __MODULE__ do
    def encode(struct, opts) do
      struct
      |> Map.from_struct()
      |> Enum.reject(fn {_k, v} -> is_nil(v) end)
      |> Map.new()
      |> Jason.Encode.map(opts)
    end
  end

  @type t :: %__MODULE__{
          :assertionId => String.t() | nil,
          :authenticationInstant => String.t() | nil,
          :authenticationMethod => String.t() | nil,
          :clientURLs => RecipientTokenClientUrls.t() | nil,
          :pingFrequency => String.t() | nil,
          :pingUrl => String.t() | nil,
          :recipientId => String.t() | nil,
          :returnUrl => String.t() | nil,
          :securityDomain => String.t() | nil,
          :xFrameOptions => String.t() | nil,
          :xFrameOptionsAllowFromUrl => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :clientURLs,
      :struct,
      RecipientTokenClientUrls
    )
    |> then(&struct(__MODULE__, &1))
  end
end
