# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.NotaryJurisdiction do
  @moduledoc """
  Creating, updating, and deleting notary jurisdiction objects.
  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.ErrorDetails
  alias DocuSign.Model.Jurisdiction

  defstruct [
    :commissionExpiration,
    :commissionId,
    :county,
    :errorDetails,
    :jurisdiction,
    :registeredName,
    :sealType
  ]

  @doc false
  defimpl Jason.Encoder, for: __MODULE__ do
    def encode(struct, opts) do
      struct
      |> Map.from_struct()
      |> Enum.reject(fn {_k, v} -> is_nil(v) end)
      |> Map.new()
      |> Jason.Encode.map(opts)
    end
  end

  @type t :: %__MODULE__{
          :commissionExpiration => String.t() | nil,
          :commissionId => String.t() | nil,
          :county => String.t() | nil,
          :errorDetails => ErrorDetails.t() | nil,
          :jurisdiction => Jurisdiction.t() | nil,
          :registeredName => String.t() | nil,
          :sealType => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :errorDetails,
      :struct,
      ErrorDetails
    )
    |> Deserializer.deserialize(
      :jurisdiction,
      :struct,
      Jurisdiction
    )
    |> then(&struct(__MODULE__, &1))
  end
end
