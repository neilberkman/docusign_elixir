# NOTE: This file is auto generated by OpenAPI Generator 6.4.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule DocuSign.Model.Users do
  @moduledoc """
  The Users resource enables you to create and manage account users.
  """

  @derive [Poison.Encoder]
  defstruct [
    :activationAccessCode,
    :company,
    :connectConfigurations,
    :countryCode,
    :createdDateTime,
    :customSettings,
    :defaultAccountId,
    :email,
    :enableConnectForUser,
    :errorDetails,
    :firstName,
    :forgottenPasswordInfo,
    :groupList,
    :hasRemoteNotary,
    :homeAddress,
    :initialsImageUri,
    :isAdmin,
    :isAlternateAdmin,
    :isNAREnabled,
    :jobTitle,
    :lastLogin,
    :lastName,
    :loginStatus,
    :middleName,
    :password,
    :passwordExpiration,
    :permissionProfileId,
    :permissionProfileName,
    :profileImageUri,
    :sendActivationEmail,
    :sendActivationOnInvalidLogin,
    :signatureImageUri,
    :subscribe,
    :suffixName,
    :title,
    :uri,
    :userAddedToAccountDateTime,
    :userId,
    :userName,
    :userProfileLastModifiedDate,
    :userSettings,
    :userStatus,
    :userType,
    :workAddress
  ]

  @type t :: %__MODULE__{
          :activationAccessCode => String.t() | nil,
          :company => String.t() | nil,
          :connectConfigurations => [DocuSign.Model.ConnectUserObject.t()] | nil,
          :countryCode => String.t() | nil,
          :createdDateTime => String.t() | nil,
          :customSettings => [DocuSign.Model.NameValue.t()] | nil,
          :defaultAccountId => String.t() | nil,
          :email => String.t() | nil,
          :enableConnectForUser => String.t() | nil,
          :errorDetails => DocuSign.Model.ErrorDetails.t() | nil,
          :firstName => String.t() | nil,
          :forgottenPasswordInfo => DocuSign.Model.ForgottenPasswordInformation.t() | nil,
          :groupList => [DocuSign.Model.Group.t()] | nil,
          :hasRemoteNotary => boolean() | nil,
          :homeAddress => DocuSign.Model.AddressInformation.t() | nil,
          :initialsImageUri => String.t() | nil,
          :isAdmin => String.t() | nil,
          :isAlternateAdmin => String.t() | nil,
          :isNAREnabled => String.t() | nil,
          :jobTitle => String.t() | nil,
          :lastLogin => String.t() | nil,
          :lastName => String.t() | nil,
          :loginStatus => String.t() | nil,
          :middleName => String.t() | nil,
          :password => String.t() | nil,
          :passwordExpiration => String.t() | nil,
          :permissionProfileId => String.t() | nil,
          :permissionProfileName => String.t() | nil,
          :profileImageUri => String.t() | nil,
          :sendActivationEmail => String.t() | nil,
          :sendActivationOnInvalidLogin => String.t() | nil,
          :signatureImageUri => String.t() | nil,
          :subscribe => String.t() | nil,
          :suffixName => String.t() | nil,
          :title => String.t() | nil,
          :uri => String.t() | nil,
          :userAddedToAccountDateTime => String.t() | nil,
          :userId => String.t() | nil,
          :userName => String.t() | nil,
          :userProfileLastModifiedDate => String.t() | nil,
          :userSettings => DocuSign.Model.UserSettingsInformation.t() | nil,
          :userStatus => String.t() | nil,
          :userType => String.t() | nil,
          :workAddress => DocuSign.Model.AddressInformation.t() | nil
        }
end

defimpl Poison.Decoder, for: DocuSign.Model.Users do
  import DocuSign.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:connectConfigurations, :list, DocuSign.Model.ConnectUserObject, options)
    |> deserialize(:customSettings, :list, DocuSign.Model.NameValue, options)
    |> deserialize(:errorDetails, :struct, DocuSign.Model.ErrorDetails, options)
    |> deserialize(
      :forgottenPasswordInfo,
      :struct,
      DocuSign.Model.ForgottenPasswordInformation,
      options
    )
    |> deserialize(:groupList, :list, DocuSign.Model.Group, options)
    |> deserialize(:homeAddress, :struct, DocuSign.Model.AddressInformation, options)
    |> deserialize(:userSettings, :struct, DocuSign.Model.UserSettingsInformation, options)
    |> deserialize(:workAddress, :struct, DocuSign.Model.AddressInformation, options)
  end
end
