# NOTE: This file is auto generated by OpenAPI Generator 7.12.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule DocuSign.Model.NotaryRecipient do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :accessCode,
    :accessCodeMetadata,
    :addAccessCodeToEmail,
    :additionalNotifications,
    :agentCanEditEmail,
    :agentCanEditName,
    :allowSystemOverrideForLockedRecipient,
    :autoNavigation,
    :autoRespondedReason,
    :bulkRecipientsUri,
    :bulkSendV2Recipient,
    :canNotaryCorrectEnvelope,
    :canSignOffline,
    :clientUserId,
    :completedCount,
    :consentDetailsList,
    :creationReason,
    :customFields,
    :declinedDateTime,
    :declinedReason,
    :defaultRecipient,
    :delegatedBy,
    :delegatedTo,
    :deliveredDateTime,
    :deliveryMethod,
    :deliveryMethodMetadata,
    :designatorId,
    :designatorIdGuid,
    :documentTemplateId,
    :documentVisibility,
    :email,
    :emailMetadata,
    :emailNotification,
    :emailRecipientPostSigningURL,
    :embeddedRecipientStartURL,
    :errorDetails,
    :excludedDocuments,
    :faxNumber,
    :faxNumberMetadata,
    :firstName,
    :firstNameMetadata,
    :fullName,
    :fullNameMetadata,
    :idCheckConfigurationName,
    :idCheckConfigurationNameMetadata,
    :idCheckInformationInput,
    :identityVerification,
    :inheritEmailNotificationConfiguration,
    :isBulkRecipient,
    :isBulkRecipientMetadata,
    :lastName,
    :lastNameMetadata,
    :liveOakStartURL,
    :lockedRecipientPhoneAuthEditable,
    :lockedRecipientSmsEditable,
    :name,
    :nameMetadata,
    :notaryId,
    :notarySignerEmailSent,
    :notarySigners,
    :notarySourceType,
    :notaryThirdPartyPartner,
    :notaryType,
    :note,
    :noteMetadata,
    :offlineAttributes,
    :phoneAuthentication,
    :phoneNumber,
    :proofFile,
    :recipientAttachments,
    :recipientAuthenticationStatus,
    :recipientFeatureMetadata,
    :recipientId,
    :recipientIdGuid,
    :recipientSignatureProviders,
    :recipientSuppliesTabs,
    :recipientType,
    :recipientTypeMetadata,
    :requireIdLookup,
    :requireIdLookupMetadata,
    :requireSignerCertificate,
    :requireSignOnPaper,
    :requireUploadSignature,
    :roleName,
    :routingOrder,
    :routingOrderMetadata,
    :sentDateTime,
    :signatureInfo,
    :signedDateTime,
    :signInEachLocation,
    :signInEachLocationMetadata,
    :signingGroupId,
    :signingGroupIdMetadata,
    :signingGroupName,
    :signingGroupUsers,
    :smsAuthentication,
    :socialAuthentications,
    :status,
    :statusCode,
    :suppressEmails,
    :tabs,
    :templateLocked,
    :templateRequired,
    :totalTabCount,
    :userId,
    :webFormRecipientViewId
  ]

  @type t :: %__MODULE__{
          :accessCode => String.t() | nil,
          :accessCodeMetadata => DocuSign.Model.PropertyMetadata.t() | nil,
          :addAccessCodeToEmail => String.t() | nil,
          :additionalNotifications => [DocuSign.Model.RecipientAdditionalNotification.t()] | nil,
          :agentCanEditEmail => String.t() | nil,
          :agentCanEditName => String.t() | nil,
          :allowSystemOverrideForLockedRecipient => String.t() | nil,
          :autoNavigation => String.t() | nil,
          :autoRespondedReason => String.t() | nil,
          :bulkRecipientsUri => String.t() | nil,
          :bulkSendV2Recipient => String.t() | nil,
          :canNotaryCorrectEnvelope => String.t() | nil,
          :canSignOffline => String.t() | nil,
          :clientUserId => String.t() | nil,
          :completedCount => String.t() | nil,
          :consentDetailsList => [DocuSign.Model.ConsentDetails.t()] | nil,
          :creationReason => String.t() | nil,
          :customFields => [String.t()] | nil,
          :declinedDateTime => String.t() | nil,
          :declinedReason => String.t() | nil,
          :defaultRecipient => String.t() | nil,
          :delegatedBy => DocuSign.Model.DelegationInfo.t() | nil,
          :delegatedTo => [DocuSign.Model.DelegationInfo.t()] | nil,
          :deliveredDateTime => String.t() | nil,
          :deliveryMethod => String.t() | nil,
          :deliveryMethodMetadata => DocuSign.Model.PropertyMetadata.t() | nil,
          :designatorId => String.t() | nil,
          :designatorIdGuid => String.t() | nil,
          :documentTemplateId => String.t() | nil,
          :documentVisibility => [DocuSign.Model.DocumentVisibility.t()] | nil,
          :email => String.t() | nil,
          :emailMetadata => DocuSign.Model.PropertyMetadata.t() | nil,
          :emailNotification => DocuSign.Model.RecipientEmailNotification.t() | nil,
          :emailRecipientPostSigningURL => String.t() | nil,
          :embeddedRecipientStartURL => String.t() | nil,
          :errorDetails => DocuSign.Model.ErrorDetails.t() | nil,
          :excludedDocuments => [String.t()] | nil,
          :faxNumber => String.t() | nil,
          :faxNumberMetadata => DocuSign.Model.PropertyMetadata.t() | nil,
          :firstName => String.t() | nil,
          :firstNameMetadata => DocuSign.Model.PropertyMetadata.t() | nil,
          :fullName => String.t() | nil,
          :fullNameMetadata => DocuSign.Model.PropertyMetadata.t() | nil,
          :idCheckConfigurationName => String.t() | nil,
          :idCheckConfigurationNameMetadata => DocuSign.Model.PropertyMetadata.t() | nil,
          :idCheckInformationInput => DocuSign.Model.IdCheckInformationInput.t() | nil,
          :identityVerification => DocuSign.Model.RecipientIdentityVerification.t() | nil,
          :inheritEmailNotificationConfiguration => String.t() | nil,
          :isBulkRecipient => String.t() | nil,
          :isBulkRecipientMetadata => DocuSign.Model.PropertyMetadata.t() | nil,
          :lastName => String.t() | nil,
          :lastNameMetadata => DocuSign.Model.PropertyMetadata.t() | nil,
          :liveOakStartURL => String.t() | nil,
          :lockedRecipientPhoneAuthEditable => String.t() | nil,
          :lockedRecipientSmsEditable => String.t() | nil,
          :name => String.t() | nil,
          :nameMetadata => DocuSign.Model.PropertyMetadata.t() | nil,
          :notaryId => String.t() | nil,
          :notarySignerEmailSent => String.t() | nil,
          :notarySigners => [String.t()] | nil,
          :notarySourceType => String.t() | nil,
          :notaryThirdPartyPartner => String.t() | nil,
          :notaryType => String.t() | nil,
          :note => String.t() | nil,
          :noteMetadata => DocuSign.Model.PropertyMetadata.t() | nil,
          :offlineAttributes => DocuSign.Model.OfflineAttributes.t() | nil,
          :phoneAuthentication => DocuSign.Model.RecipientPhoneAuthentication.t() | nil,
          :phoneNumber => DocuSign.Model.RecipientPhoneNumber.t() | nil,
          :proofFile => DocuSign.Model.RecipientProofFile.t() | nil,
          :recipientAttachments => [DocuSign.Model.RecipientAttachment.t()] | nil,
          :recipientAuthenticationStatus => DocuSign.Model.AuthenticationStatus.t() | nil,
          :recipientFeatureMetadata => [DocuSign.Model.FeatureAvailableMetadata.t()] | nil,
          :recipientId => String.t() | nil,
          :recipientIdGuid => String.t() | nil,
          :recipientSignatureProviders => [DocuSign.Model.RecipientSignatureProvider.t()] | nil,
          :recipientSuppliesTabs => String.t() | nil,
          :recipientType => String.t() | nil,
          :recipientTypeMetadata => DocuSign.Model.PropertyMetadata.t() | nil,
          :requireIdLookup => String.t() | nil,
          :requireIdLookupMetadata => DocuSign.Model.PropertyMetadata.t() | nil,
          :requireSignerCertificate => String.t() | nil,
          :requireSignOnPaper => String.t() | nil,
          :requireUploadSignature => String.t() | nil,
          :roleName => String.t() | nil,
          :routingOrder => String.t() | nil,
          :routingOrderMetadata => DocuSign.Model.PropertyMetadata.t() | nil,
          :sentDateTime => String.t() | nil,
          :signatureInfo => DocuSign.Model.RecipientSignatureInformation.t() | nil,
          :signedDateTime => String.t() | nil,
          :signInEachLocation => String.t() | nil,
          :signInEachLocationMetadata => DocuSign.Model.PropertyMetadata.t() | nil,
          :signingGroupId => String.t() | nil,
          :signingGroupIdMetadata => DocuSign.Model.PropertyMetadata.t() | nil,
          :signingGroupName => String.t() | nil,
          :signingGroupUsers => [DocuSign.Model.UserInfo.t()] | nil,
          :smsAuthentication => DocuSign.Model.RecipientSmsAuthentication.t() | nil,
          :socialAuthentications => [DocuSign.Model.SocialAuthentication.t()] | nil,
          :status => String.t() | nil,
          :statusCode => String.t() | nil,
          :suppressEmails => String.t() | nil,
          :tabs => DocuSign.Model.EnvelopeRecipientTabs.t() | nil,
          :templateLocked => String.t() | nil,
          :templateRequired => String.t() | nil,
          :totalTabCount => String.t() | nil,
          :userId => String.t() | nil,
          :webFormRecipientViewId => String.t() | nil
        }

  alias DocuSign.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:accessCodeMetadata, :struct, DocuSign.Model.PropertyMetadata)
    |> Deserializer.deserialize(
      :additionalNotifications,
      :list,
      DocuSign.Model.RecipientAdditionalNotification
    )
    |> Deserializer.deserialize(:consentDetailsList, :list, DocuSign.Model.ConsentDetails)
    |> Deserializer.deserialize(:delegatedBy, :struct, DocuSign.Model.DelegationInfo)
    |> Deserializer.deserialize(:delegatedTo, :list, DocuSign.Model.DelegationInfo)
    |> Deserializer.deserialize(:deliveryMethodMetadata, :struct, DocuSign.Model.PropertyMetadata)
    |> Deserializer.deserialize(:documentVisibility, :list, DocuSign.Model.DocumentVisibility)
    |> Deserializer.deserialize(:emailMetadata, :struct, DocuSign.Model.PropertyMetadata)
    |> Deserializer.deserialize(
      :emailNotification,
      :struct,
      DocuSign.Model.RecipientEmailNotification
    )
    |> Deserializer.deserialize(:errorDetails, :struct, DocuSign.Model.ErrorDetails)
    |> Deserializer.deserialize(:faxNumberMetadata, :struct, DocuSign.Model.PropertyMetadata)
    |> Deserializer.deserialize(:firstNameMetadata, :struct, DocuSign.Model.PropertyMetadata)
    |> Deserializer.deserialize(:fullNameMetadata, :struct, DocuSign.Model.PropertyMetadata)
    |> Deserializer.deserialize(
      :idCheckConfigurationNameMetadata,
      :struct,
      DocuSign.Model.PropertyMetadata
    )
    |> Deserializer.deserialize(
      :idCheckInformationInput,
      :struct,
      DocuSign.Model.IdCheckInformationInput
    )
    |> Deserializer.deserialize(
      :identityVerification,
      :struct,
      DocuSign.Model.RecipientIdentityVerification
    )
    |> Deserializer.deserialize(
      :isBulkRecipientMetadata,
      :struct,
      DocuSign.Model.PropertyMetadata
    )
    |> Deserializer.deserialize(:lastNameMetadata, :struct, DocuSign.Model.PropertyMetadata)
    |> Deserializer.deserialize(:nameMetadata, :struct, DocuSign.Model.PropertyMetadata)
    |> Deserializer.deserialize(:noteMetadata, :struct, DocuSign.Model.PropertyMetadata)
    |> Deserializer.deserialize(:offlineAttributes, :struct, DocuSign.Model.OfflineAttributes)
    |> Deserializer.deserialize(
      :phoneAuthentication,
      :struct,
      DocuSign.Model.RecipientPhoneAuthentication
    )
    |> Deserializer.deserialize(:phoneNumber, :struct, DocuSign.Model.RecipientPhoneNumber)
    |> Deserializer.deserialize(:proofFile, :struct, DocuSign.Model.RecipientProofFile)
    |> Deserializer.deserialize(:recipientAttachments, :list, DocuSign.Model.RecipientAttachment)
    |> Deserializer.deserialize(
      :recipientAuthenticationStatus,
      :struct,
      DocuSign.Model.AuthenticationStatus
    )
    |> Deserializer.deserialize(
      :recipientFeatureMetadata,
      :list,
      DocuSign.Model.FeatureAvailableMetadata
    )
    |> Deserializer.deserialize(
      :recipientSignatureProviders,
      :list,
      DocuSign.Model.RecipientSignatureProvider
    )
    |> Deserializer.deserialize(:recipientTypeMetadata, :struct, DocuSign.Model.PropertyMetadata)
    |> Deserializer.deserialize(
      :requireIdLookupMetadata,
      :struct,
      DocuSign.Model.PropertyMetadata
    )
    |> Deserializer.deserialize(:routingOrderMetadata, :struct, DocuSign.Model.PropertyMetadata)
    |> Deserializer.deserialize(
      :signatureInfo,
      :struct,
      DocuSign.Model.RecipientSignatureInformation
    )
    |> Deserializer.deserialize(
      :signInEachLocationMetadata,
      :struct,
      DocuSign.Model.PropertyMetadata
    )
    |> Deserializer.deserialize(:signingGroupIdMetadata, :struct, DocuSign.Model.PropertyMetadata)
    |> Deserializer.deserialize(:signingGroupUsers, :list, DocuSign.Model.UserInfo)
    |> Deserializer.deserialize(
      :smsAuthentication,
      :struct,
      DocuSign.Model.RecipientSmsAuthentication
    )
    |> Deserializer.deserialize(
      :socialAuthentications,
      :list,
      DocuSign.Model.SocialAuthentication
    )
    |> Deserializer.deserialize(:tabs, :struct, DocuSign.Model.EnvelopeRecipientTabs)
  end
end
