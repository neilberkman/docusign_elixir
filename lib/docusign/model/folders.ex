# NOTE: This file is auto generated by OpenAPI Generator 6.4.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule DocuSign.Model.Folders do
  @moduledoc """
  Folders allow you to organize envelopes and templates.
  """

  @derive [Poison.Encoder]
  defstruct [
    :endPosition,
    :envelopes,
    :folders,
    :nextUri,
    :previousUri,
    :resultSetSize,
    :startPosition,
    :totalSetSize
  ]

  @type t :: %__MODULE__{
          :endPosition => String.t() | nil,
          :envelopes => [DocuSign.Model.EnvelopeSummary.t()] | nil,
          :folders => [DocuSign.Model.Folder.t()] | nil,
          :nextUri => String.t() | nil,
          :previousUri => String.t() | nil,
          :resultSetSize => String.t() | nil,
          :startPosition => String.t() | nil,
          :totalSetSize => String.t() | nil
        }
end

defimpl Poison.Decoder, for: DocuSign.Model.Folders do
  import DocuSign.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:envelopes, :list, DocuSign.Model.EnvelopeSummary, options)
    |> deserialize(:folders, :list, DocuSign.Model.Folder, options)
  end
end
