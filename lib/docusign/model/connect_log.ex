# NOTE: This file is auto generated by OpenAPI Generator 7.12.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule DocuSign.Model.ConnectLog do
  @moduledoc """
  Contains information about a Connect log entry.
  """

  @derive Jason.Encoder
  defstruct [
    :accountId,
    :configUrl,
    :connectDebugLog,
    :connectId,
    :created,
    :email,
    :envelopeId,
    :error,
    :failureId,
    :failureUri,
    :lastTry,
    :logId,
    :logUri,
    :retryCount,
    :retryUri,
    :status,
    :subject,
    :userName
  ]

  @type t :: %__MODULE__{
          :accountId => String.t() | nil,
          :configUrl => String.t() | nil,
          :connectDebugLog => [DocuSign.Model.ConnectDebugLog.t()] | nil,
          :connectId => String.t() | nil,
          :created => String.t() | nil,
          :email => String.t() | nil,
          :envelopeId => String.t() | nil,
          :error => String.t() | nil,
          :failureId => String.t() | nil,
          :failureUri => String.t() | nil,
          :lastTry => String.t() | nil,
          :logId => String.t() | nil,
          :logUri => String.t() | nil,
          :retryCount => String.t() | nil,
          :retryUri => String.t() | nil,
          :status => String.t() | nil,
          :subject => String.t() | nil,
          :userName => String.t() | nil
        }

  alias DocuSign.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:connectDebugLog, :list, DocuSign.Model.ConnectDebugLog)
  end
end
