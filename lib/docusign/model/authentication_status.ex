# NOTE: This file is auto generated by OpenAPI Generator 7.12.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule DocuSign.Model.AuthenticationStatus do
  @moduledoc """
  A complex element that contains information about a user's authentication status.
  """

  @derive Jason.Encoder
  defstruct [
    :accessCodeResult,
    :ageVerifyResult,
    :anySocialIDResult,
    :facebookResult,
    :googleResult,
    :identityVerificationResult,
    :idLookupResult,
    :idQuestionsResult,
    :linkedinResult,
    :liveIDResult,
    :ofacResult,
    :openIDResult,
    :phoneAuthResult,
    :salesforceResult,
    :signatureProviderResult,
    :smsAuthResult,
    :sTANPinResult,
    :twitterResult,
    :yahooResult
  ]

  @type t :: %__MODULE__{
          :accessCodeResult => DocuSign.Model.EventResult.t() | nil,
          :ageVerifyResult => DocuSign.Model.EventResult.t() | nil,
          :anySocialIDResult => DocuSign.Model.EventResult.t() | nil,
          :facebookResult => DocuSign.Model.EventResult.t() | nil,
          :googleResult => DocuSign.Model.EventResult.t() | nil,
          :identityVerificationResult => DocuSign.Model.EventResult.t() | nil,
          :idLookupResult => DocuSign.Model.EventResult.t() | nil,
          :idQuestionsResult => DocuSign.Model.EventResult.t() | nil,
          :linkedinResult => DocuSign.Model.EventResult.t() | nil,
          :liveIDResult => DocuSign.Model.EventResult.t() | nil,
          :ofacResult => DocuSign.Model.EventResult.t() | nil,
          :openIDResult => DocuSign.Model.EventResult.t() | nil,
          :phoneAuthResult => DocuSign.Model.EventResult.t() | nil,
          :salesforceResult => DocuSign.Model.EventResult.t() | nil,
          :signatureProviderResult => DocuSign.Model.EventResult.t() | nil,
          :smsAuthResult => DocuSign.Model.EventResult.t() | nil,
          :sTANPinResult => DocuSign.Model.EventResult.t() | nil,
          :twitterResult => DocuSign.Model.EventResult.t() | nil,
          :yahooResult => DocuSign.Model.EventResult.t() | nil
        }

  alias DocuSign.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:accessCodeResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:ageVerifyResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:anySocialIDResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:facebookResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:googleResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:identityVerificationResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:idLookupResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:idQuestionsResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:linkedinResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:liveIDResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:ofacResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:openIDResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:phoneAuthResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:salesforceResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:signatureProviderResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:smsAuthResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:sTANPinResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:twitterResult, :struct, DocuSign.Model.EventResult)
    |> Deserializer.deserialize(:yahooResult, :struct, DocuSign.Model.EventResult)
  end
end
