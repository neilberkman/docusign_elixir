# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.UserProfiles do
  @moduledoc """
  Users' profiles
  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.AddressInformation
  alias DocuSign.Model.AuthenticationMethod
  alias DocuSign.Model.UsageHistory
  alias DocuSign.Model.UserInformation

  @derive Jason.Encoder
  defstruct [
    :address,
    :authenticationMethods,
    :companyName,
    :displayOrganizationInfo,
    :displayPersonalInfo,
    :displayProfile,
    :displayUsageHistory,
    :profileImageUri,
    :title,
    :usageHistory,
    :userDetails,
    :userProfileLastModifiedDate
  ]

  @type t :: %__MODULE__{
          :address => AddressInformation.t() | nil,
          :authenticationMethods => [AuthenticationMethod.t()] | nil,
          :companyName => String.t() | nil,
          :displayOrganizationInfo => String.t() | nil,
          :displayPersonalInfo => String.t() | nil,
          :displayProfile => String.t() | nil,
          :displayUsageHistory => String.t() | nil,
          :profileImageUri => String.t() | nil,
          :title => String.t() | nil,
          :usageHistory => UsageHistory.t() | nil,
          :userDetails => UserInformation.t() | nil,
          :userProfileLastModifiedDate => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :address,
      :struct,
      AddressInformation
    )
    |> Deserializer.deserialize(
      :authenticationMethods,
      :list,
      AuthenticationMethod
    )
    |> Deserializer.deserialize(
      :usageHistory,
      :struct,
      UsageHistory
    )
    |> Deserializer.deserialize(
      :userDetails,
      :struct,
      UserInformation
    )
  end
end
