# NOTE: This file is auto generated by OpenAPI Generator 7.12.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule DocuSign.Model.Recipients do
  @moduledoc """
  Specifies the envelope recipients.
  """

  @derive Jason.Encoder
  defstruct [
    :agents,
    :carbonCopies,
    :certifiedDeliveries,
    :currentRoutingOrder,
    :editors,
    :errorDetails,
    :inPersonSigners,
    :intermediaries,
    :notaries,
    :participants,
    :recipientCount,
    :seals,
    :signers,
    :witnesses
  ]

  @type t :: %__MODULE__{
          :agents => [DocuSign.Model.Agent.t()] | nil,
          :carbonCopies => [DocuSign.Model.CarbonCopy.t()] | nil,
          :certifiedDeliveries => [DocuSign.Model.CertifiedDelivery.t()] | nil,
          :currentRoutingOrder => String.t() | nil,
          :editors => [DocuSign.Model.Editor.t()] | nil,
          :errorDetails => DocuSign.Model.ErrorDetails.t() | nil,
          :inPersonSigners => [DocuSign.Model.InPersonSigner.t()] | nil,
          :intermediaries => [DocuSign.Model.Intermediary.t()] | nil,
          :notaries => [DocuSign.Model.NotaryRecipient.t()] | nil,
          :participants => [DocuSign.Model.Participant.t()] | nil,
          :recipientCount => String.t() | nil,
          :seals => [DocuSign.Model.SealSign.t()] | nil,
          :signers => [DocuSign.Model.Signer.t()] | nil,
          :witnesses => [DocuSign.Model.Witness.t()] | nil
        }

  alias DocuSign.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:agents, :list, DocuSign.Model.Agent)
    |> Deserializer.deserialize(:carbonCopies, :list, DocuSign.Model.CarbonCopy)
    |> Deserializer.deserialize(:certifiedDeliveries, :list, DocuSign.Model.CertifiedDelivery)
    |> Deserializer.deserialize(:editors, :list, DocuSign.Model.Editor)
    |> Deserializer.deserialize(:errorDetails, :struct, DocuSign.Model.ErrorDetails)
    |> Deserializer.deserialize(:inPersonSigners, :list, DocuSign.Model.InPersonSigner)
    |> Deserializer.deserialize(:intermediaries, :list, DocuSign.Model.Intermediary)
    |> Deserializer.deserialize(:notaries, :list, DocuSign.Model.NotaryRecipient)
    |> Deserializer.deserialize(:participants, :list, DocuSign.Model.Participant)
    |> Deserializer.deserialize(:seals, :list, DocuSign.Model.SealSign)
    |> Deserializer.deserialize(:signers, :list, DocuSign.Model.Signer)
    |> Deserializer.deserialize(:witnesses, :list, DocuSign.Model.Witness)
  end
end
