# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.Authorizations do
  @moduledoc """
  Authorizations allow you to share access between users on an account.
  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.AuthorizationUser

  defstruct [
    :agentUser,
    :authorizationId,
    :created,
    :createdBy,
    :endDate,
    :modified,
    :modifiedBy,
    :permission,
    :principalUser,
    :startDate
  ]

  @doc false
  defimpl Jason.Encoder, for: __MODULE__ do
    def encode(struct, opts) do
      struct
      |> Map.from_struct()
      |> Enum.reject(fn {_k, v} -> is_nil(v) end)
      |> Map.new()
      |> Jason.Encode.map(opts)
    end
  end

  @type t :: %__MODULE__{
          :agentUser => AuthorizationUser.t() | nil,
          :authorizationId => String.t() | nil,
          :created => String.t() | nil,
          :createdBy => String.t() | nil,
          :endDate => String.t() | nil,
          :modified => String.t() | nil,
          :modifiedBy => String.t() | nil,
          :permission => String.t() | nil,
          :principalUser => AuthorizationUser.t() | nil,
          :startDate => String.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :agentUser,
      :struct,
      AuthorizationUser
    )
    |> Deserializer.deserialize(
      :principalUser,
      :struct,
      AuthorizationUser
    )
    |> then(&struct(__MODULE__, &1))
  end
end
