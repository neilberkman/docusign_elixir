# NOTE: This file is auto generated by OpenAPI Generator
# https://openapi-generator.tech
# Do not edit this file manually.

defmodule DocuSign.Model.PaletteSettings do
  @moduledoc """
  Reserved for Docusign.
  """

  alias DocuSign.Deserializer
  alias DocuSign.Model.PaletteItemSettings

  defstruct [
    :annotations,
    :custom,
    :merge,
    :notary,
    :seals,
    :smartContracts,
    :smartSections
  ]

  @doc false
  defimpl Jason.Encoder, for: __MODULE__ do
    def encode(struct, opts) do
      struct
      |> Map.from_struct()
      |> Enum.reject(fn {_k, v} -> is_nil(v) end)
      |> Map.new()
      |> Jason.Encode.map(opts)
    end
  end

  @type t :: %__MODULE__{
          :annotations => PaletteItemSettings.t() | nil,
          :custom => PaletteItemSettings.t() | nil,
          :merge => PaletteItemSettings.t() | nil,
          :notary => PaletteItemSettings.t() | nil,
          :seals => PaletteItemSettings.t() | nil,
          :smartContracts => PaletteItemSettings.t() | nil,
          :smartSections => PaletteItemSettings.t() | nil
        }

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :annotations,
      :struct,
      PaletteItemSettings
    )
    |> Deserializer.deserialize(
      :custom,
      :struct,
      PaletteItemSettings
    )
    |> Deserializer.deserialize(
      :merge,
      :struct,
      PaletteItemSettings
    )
    |> Deserializer.deserialize(
      :notary,
      :struct,
      PaletteItemSettings
    )
    |> Deserializer.deserialize(
      :seals,
      :struct,
      PaletteItemSettings
    )
    |> Deserializer.deserialize(
      :smartContracts,
      :struct,
      PaletteItemSettings
    )
    |> Deserializer.deserialize(
      :smartSections,
      :struct,
      PaletteItemSettings
    )
    |> then(&struct(__MODULE__, &1))
  end
end
